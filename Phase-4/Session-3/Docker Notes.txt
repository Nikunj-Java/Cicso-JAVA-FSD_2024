*************************************************************************************
1.Create AWS UBUNTU Instance With Port No: 80,8080,Connect Using AWS CLI
*************************************************************************************
Step:1 INSTALL DOCKER
-------------------------------------------------------------------------------------
Link: https://docs.docker.com/engine/install/ubuntu/

# Add Docker's official GPG key:
> sudo apt-get update
> sudo apt-get install ca-certificates curl
> sudo install -m 0755 -d /etc/apt/keyrings
> sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
> sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
> echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
> sudo apt-get update
> sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin


STEP:2 DOCKER COMMANDS
--------------------------------------------------------------------------------------

- To check version: 
	> docker --version
- Running Container: 
	> sudo docker ps -a
- docker images: 
	> sudo docker images
- docker container: 
	> sudo docker container ls
- create container in detach mode: 
	> sudo docker run -d -p 80:80 docker/getting-started
- stop container: 
	> sudo docker stop name_of_container
- remove container: 
	> sudo docker rm -f name_of_container
- remove image: 
	> sudo docker rmi -f name_of image

*******************************************************************************************
EXERCISE:1  PULL THE READY IMAGES AVAILABLE FROM DOCKER REGISTRY
*******************************************************************************************
> sudo docker pull ubuntu

> sudo docker pull mysql

> sudo docker pull mysql:5.7
  

*****************************************************************************************
EXERCISE:2  PULL CUSTOM IMAGES (GIT HUB)
*****************************************************************************************
> git clone https://github.com/Nikunj-Java/docker_master.git
> ls (to check the availability of folders)
> cd docker_master


step:1 prepare image in docker container

> sudo docker build -t myimage .   (. is mendatory)

> sudo docker images

step2 : run the container

> sudo docker run -d --name mycontainer -p 80:80 myimage
> sudo docker runh -d -p 80:80 myimage

> sudo docker container ls
> curl local host


goto: browser> copy your aws instance ipv4add:80 +Enter

> you will see the out put in the browser


******************************************************************************************
EXERCISE: 3 PUSH THE IMAGES IN DOCKER HUB 
******************************************************************************************

> sudo docker tag myimage nikunj0510/cisco_image24
> sudo docker login
	> username:
	> password:  
	> else activate using browser and code
	Message: Successfully Logged In
goto> docker.com checj your repositories
new repository with the name "cisco_images24" will be prepared




